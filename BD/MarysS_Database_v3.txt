-- VERSIÓN CON EMPLEADO JEFE, ADEMÁS, SOLO RENTA Y PROVICIÓN MUCHOS A MUCHOS
-- FINAL
drop database if exists Mary_sS;
CREATE DATABASE Mary_sS;
USE Mary_sS;

CREATE TABLE Direccion (
    DireccionID varchar(10) not null primary key,
    Zona varchar(50) not null,
    CalleAvenida varchar(50) not null,
    Numero int(3) not null,
    Piso int(1) NULL,
    Habilitado boolean not null default 1
);

CREATE TABLE Empleado(
    EmpleadoID varchar(10) not null primary key,
    UsuarioID varchar(10) not null,
    DireccionID varchar(10) null,
    CI int(10) not null,
    Nombre varchar(50) not null,
    Apellido varchar(50) not null,
    FechaContrato date not null,
    FechaNacimiento date not null,
    Salario int(5) not null,
    Habilitado boolean not null default 0,
   -- DirigidoPor varchar(10) not null,
    FOREIGN KEY (DireccionID) REFERENCES Direccion(DireccionID)
);

CREATE TABLE UsuarioEmp (
    EmpleadoID varchar(10) not null primary key,
    Usuario varchar(50) not null,
    Correo varchar(50) not null,
    Keyword varchar(50) not null,
    Habilitado boolean not null default 1,
    FOREIGN KEY (EmpleadoID) REFERENCES Empleado(EmpleadoID)
);

CREATE TABLE Cliente(
    ClienteID varchar(10) not null primary key,
    DireccionID varchar(10) null,
   -- DireccionID varchar(10) null,
    CI int(10) not null,
    Nombre varchar(50) not null,
    Apellido varchar(50) not null,
    Correo varchar(50) null,
    Telefono int(9) not null,
    NIT int(15) not null,
    CantTransacciones int(4) not null default 0,
    Habilitado boolean not null default 1,
    FOREIGN KEY (DireccionID) REFERENCES Direccion(DireccionID)
);

CREATE TABLE Garantia(
    GarantiaID varchar(10) not null primary key,
    Tipo varchar(50) not null,
    Descripcion varchar(200) NULL,
    Habilitado boolean not null default 1
);

CREATE TABLE Proveedor(
    ProveedorID varchar(10) not null primary key,
    DireccionID varchar(10) null,
    Nombre varchar(50) not null,
    NombreContacto varchar(50) not null,
    ApellidoContacto varchar(50) not null,
    TituloContacto varchar(50) not null,
    Correo varchar(50) null,
    Telefono int(9) not null,
    Habilitado boolean not null default 1,
    FOREIGN KEY (DireccionID) REFERENCES Direccion(DireccionID)
);

CREATE TABLE Renta(
    RentaID varchar(10) not null primary key,
    ClienteID varchar(10) not null,
    EmpleadoID varchar(10) not null,
    GarantiaID varchar(10) not null,
    NroFactura int(20) not null,
    FechaRenta date not null,
    FechaDevolucion date not null,
    FechaDevuelto date null,
    Importe int(5) not null,
    Descuento int(5) not null,
    Habilitado boolean not null default 1,
    FOREIGN KEY (ClienteID) REFERENCES Cliente(ClienteID),
    FOREIGN KEY (EmpleadoID) REFERENCES Empleado(EmpleadoID),
    FOREIGN KEY (GarantiaID) REFERENCES Garantia(GarantiaID)
);
CREATE TABLE Producto(
    ProductoID varchar(10) not null primary key,
    PrecioUnitario decimal not null,
    Stock int(5) not null default 0,
    NroPiezasIncluidas int(3),
    Categoria varchar(20),
    Descripcion varchar(200) null,
    Habilitado boolean not null default 1
);

CREATE TABLE DetalleRenta(
    RentaID varchar(10) not null,
    ProductoID varchar(10) not null,
    Cantidad int(20) not null,
    PrecioTotal int(5) not null,
    Habilitado boolean not null default 1,
    primary key (RentaID, ProductoID),
    FOREIGN KEY (RentaID) REFERENCES Renta(RentaID),
    FOREIGN KEY (ProductoID) REFERENCES Producto(ProductoID)
);

CREATE TABLE Provision(
    ProductoID varchar(10) not null,
    ProveedorID varchar(10) not null,
    FechaProvision date not null,
    Cantidad int(20) not null,
    Habilitado boolean not null default 1,
    primary key (ProductoID, ProveedorID, FechaProvision),
    FOREIGN KEY (ProductoID) REFERENCES Producto(ProductoID),
    FOREIGN KEY (ProveedorID) REFERENCES Proveedor(ProveedorID)
);

CREATE TABLE Actividad (
    ActividadID int AUTO_INCREMENT PRIMARY KEY,
    EmpleadoID varchar(10) not null,
    HoraInicio DATETIME not null,
    HoraSalida datetime null,
    Intentos int(2) not null DEFAULT 0,
    FOREIGN KEY (EmpleadoID) REFERENCES Empleado(EmpleadoID)
);

--  ALTER TABLE Empleado ADD CONSTRAINT FK_Empleado_DirigidoPor FOREIGN KEY (DirigidoPor) REFERENCES Empleado(EmpleadoID);